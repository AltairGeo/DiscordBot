name: Deploy Discord Bot
on: 
  workflow_dispatch:
  release:
    types: [published]
jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint code
        run: |
          flake8 . --count --statistics

      - name: Run tests
        run: |
          python -m unittest discover -s ./tests  -p 'test_*.py'

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PWD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: altairgeo/ds-bot

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: altairgeo/ds-bot:latest

  CD:
    needs: CI
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER}}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            docker stop $(docker ps -q --filter ancestor=altairgeo/ds-bot)
            docker rm $(docker ps -q --filter ancestor=altairgeo/ds-bot)
            docker rmi altairgeo/ds-bot
            sudo docker pull altairgeo/ds-bot:latest
            docker run -e DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }} -e YANDEX_MAP=${{ secrets.YANDEX_MAP_TOKEN }} -e DB_HOST=${{ secrets.DB_HOST }} -e DB_PORT=${{ secrets.DB_PORT }} -e DB_USER=${{ secrets.DB_USER }} -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} -e DB_DB=${{ secrets.DB_NAME }} --restart unless-stopped altairgeo/ds-bot

          
